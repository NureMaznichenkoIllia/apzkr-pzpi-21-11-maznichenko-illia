{"ast":null,"code":"import axios from 'axios';\nimport { REACT_APP_API_URL } from '../consts';\nconst axiosConfig = {\n  baseURL: REACT_APP_API_URL\n};\nconst $host = axios.create(axiosConfig);\nconst $authhost = axios.create(axiosConfig);\nconst authInterceptor = config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.authorization = `Bearer ${token}`;\n  }\n  return config;\n};\n$authhost.interceptors.request.use(authInterceptor);\nexport { $host, $authhost };","map":{"version":3,"names":["axios","REACT_APP_API_URL","axiosConfig","baseURL","$host","create","$authhost","authInterceptor","config","token","localStorage","getItem","headers","authorization","interceptors","request","use"],"sources":["C:/Users/Илья/Desktop/курсачАПЗ/client/src/http/index.ts"],"sourcesContent":["import axios, { AxiosInstance, AxiosRequestConfig, InternalAxiosRequestConfig } from 'axios';\r\nimport { REACT_APP_API_URL } from '../consts';\r\n\r\nconst axiosConfig: AxiosRequestConfig = {\r\n    baseURL: REACT_APP_API_URL\r\n};\r\n\r\nconst $host: AxiosInstance = axios.create(axiosConfig);\r\nconst $authhost: AxiosInstance = axios.create(axiosConfig);\r\n\r\nconst authInterceptor = (config: InternalAxiosRequestConfig): InternalAxiosRequestConfig => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n        config.headers.authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n};\r\n\r\n$authhost.interceptors.request.use(authInterceptor);\r\n\r\nexport {\r\n    $host,\r\n    $authhost\r\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAyE,OAAO;AAC5F,SAASC,iBAAiB,QAAQ,WAAW;AAE7C,MAAMC,WAA+B,GAAG;EACpCC,OAAO,EAAEF;AACb,CAAC;AAED,MAAMG,KAAoB,GAAGJ,KAAK,CAACK,MAAM,CAACH,WAAW,CAAC;AACtD,MAAMI,SAAwB,GAAGN,KAAK,CAACK,MAAM,CAACH,WAAW,CAAC;AAE1D,MAAMK,eAAe,GAAIC,MAAkC,IAAiC;EACxF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACPD,MAAM,CAACI,OAAO,CAACC,aAAa,GAAI,UAASJ,KAAM,EAAC;EACpD;EACA,OAAOD,MAAM;AACjB,CAAC;AAEDF,SAAS,CAACQ,YAAY,CAACC,OAAO,CAACC,GAAG,CAACT,eAAe,CAAC;AAEnD,SACIH,KAAK,EACLE,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}